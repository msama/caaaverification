/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class AFsmTransition extends PFsmTransition
{
    private TTransitionFunc _transitionFunc_;
    private TEqual _equal_;
    private PTransitionList _transitionList_;

    public AFsmTransition()
    {
    }

    public AFsmTransition(
        TTransitionFunc _transitionFunc_,
        TEqual _equal_,
        PTransitionList _transitionList_)
    {
        setTransitionFunc(_transitionFunc_);

        setEqual(_equal_);

        setTransitionList(_transitionList_);

    }
    public Object clone()
    {
        return new AFsmTransition(
            (TTransitionFunc) cloneNode(_transitionFunc_),
            (TEqual) cloneNode(_equal_),
            (PTransitionList) cloneNode(_transitionList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFsmTransition(this);
    }

    public TTransitionFunc getTransitionFunc()
    {
        return _transitionFunc_;
    }

    public void setTransitionFunc(TTransitionFunc node)
    {
        if(_transitionFunc_ != null)
        {
            _transitionFunc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _transitionFunc_ = node;
    }

    public TEqual getEqual()
    {
        return _equal_;
    }

    public void setEqual(TEqual node)
    {
        if(_equal_ != null)
        {
            _equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equal_ = node;
    }

    public PTransitionList getTransitionList()
    {
        return _transitionList_;
    }

    public void setTransitionList(PTransitionList node)
    {
        if(_transitionList_ != null)
        {
            _transitionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _transitionList_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_transitionFunc_)
            + toString(_equal_)
            + toString(_transitionList_);
    }

    void removeChild(Node child)
    {
        if(_transitionFunc_ == child)
        {
            _transitionFunc_ = null;
            return;
        }

        if(_equal_ == child)
        {
            _equal_ = null;
            return;
        }

        if(_transitionList_ == child)
        {
            _transitionList_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_transitionFunc_ == oldChild)
        {
            setTransitionFunc((TTransitionFunc) newChild);
            return;
        }

        if(_equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(_transitionList_ == oldChild)
        {
            setTransitionList((PTransitionList) newChild);
            return;
        }

    }
}
