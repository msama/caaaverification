/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ALogicGtRelationExp extends PRelationExp
{
    private PMyUnaryExp _gt1_;
    private TLGt _lGt_;
    private PMyUnaryExp _gt2_;

    public ALogicGtRelationExp()
    {
    }

    public ALogicGtRelationExp(
        PMyUnaryExp _gt1_,
        TLGt _lGt_,
        PMyUnaryExp _gt2_)
    {
        setGt1(_gt1_);

        setLGt(_lGt_);

        setGt2(_gt2_);

    }
    public Object clone()
    {
        return new ALogicGtRelationExp(
            (PMyUnaryExp) cloneNode(_gt1_),
            (TLGt) cloneNode(_lGt_),
            (PMyUnaryExp) cloneNode(_gt2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogicGtRelationExp(this);
    }

    public PMyUnaryExp getGt1()
    {
        return _gt1_;
    }

    public void setGt1(PMyUnaryExp node)
    {
        if(_gt1_ != null)
        {
            _gt1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _gt1_ = node;
    }

    public TLGt getLGt()
    {
        return _lGt_;
    }

    public void setLGt(TLGt node)
    {
        if(_lGt_ != null)
        {
            _lGt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lGt_ = node;
    }

    public PMyUnaryExp getGt2()
    {
        return _gt2_;
    }

    public void setGt2(PMyUnaryExp node)
    {
        if(_gt2_ != null)
        {
            _gt2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _gt2_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_gt1_)
            + toString(_lGt_)
            + toString(_gt2_);
    }

    void removeChild(Node child)
    {
        if(_gt1_ == child)
        {
            _gt1_ = null;
            return;
        }

        if(_lGt_ == child)
        {
            _lGt_ = null;
            return;
        }

        if(_gt2_ == child)
        {
            _gt2_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_gt1_ == oldChild)
        {
            setGt1((PMyUnaryExp) newChild);
            return;
        }

        if(_lGt_ == oldChild)
        {
            setLGt((TLGt) newChild);
            return;
        }

        if(_gt2_ == oldChild)
        {
            setGt2((PMyUnaryExp) newChild);
            return;
        }

    }
}
