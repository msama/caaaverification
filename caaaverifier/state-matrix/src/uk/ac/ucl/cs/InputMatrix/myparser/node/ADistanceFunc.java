/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ADistanceFunc extends PDistanceFunc
{
    private TDist _dist_;
    private TLPar _lPar_;
    private PLocationName _locationName_;
    private TRPar _rPar_;

    public ADistanceFunc()
    {
    }

    public ADistanceFunc(
        TDist _dist_,
        TLPar _lPar_,
        PLocationName _locationName_,
        TRPar _rPar_)
    {
        setDist(_dist_);

        setLPar(_lPar_);

        setLocationName(_locationName_);

        setRPar(_rPar_);

    }
    public Object clone()
    {
        return new ADistanceFunc(
            (TDist) cloneNode(_dist_),
            (TLPar) cloneNode(_lPar_),
            (PLocationName) cloneNode(_locationName_),
            (TRPar) cloneNode(_rPar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADistanceFunc(this);
    }

    public TDist getDist()
    {
        return _dist_;
    }

    public void setDist(TDist node)
    {
        if(_dist_ != null)
        {
            _dist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dist_ = node;
    }

    public TLPar getLPar()
    {
        return _lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(_lPar_ != null)
        {
            _lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lPar_ = node;
    }

    public PLocationName getLocationName()
    {
        return _locationName_;
    }

    public void setLocationName(PLocationName node)
    {
        if(_locationName_ != null)
        {
            _locationName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _locationName_ = node;
    }

    public TRPar getRPar()
    {
        return _rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(_rPar_ != null)
        {
            _rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rPar_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_dist_)
            + toString(_lPar_)
            + toString(_locationName_)
            + toString(_rPar_);
    }

    void removeChild(Node child)
    {
        if(_dist_ == child)
        {
            _dist_ = null;
            return;
        }

        if(_lPar_ == child)
        {
            _lPar_ = null;
            return;
        }

        if(_locationName_ == child)
        {
            _locationName_ = null;
            return;
        }

        if(_rPar_ == child)
        {
            _rPar_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_dist_ == oldChild)
        {
            setDist((TDist) newChild);
            return;
        }

        if(_lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(_locationName_ == oldChild)
        {
            setLocationName((PLocationName) newChild);
            return;
        }

        if(_rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

    }
}
