/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ASequenceTriggers extends PTriggers
{
    private PTriggers _triggers_;
    private TComma _comma_;
    private PAtrigger _atrigger_;

    public ASequenceTriggers()
    {
    }

    public ASequenceTriggers(
        PTriggers _triggers_,
        TComma _comma_,
        PAtrigger _atrigger_)
    {
        setTriggers(_triggers_);

        setComma(_comma_);

        setAtrigger(_atrigger_);

    }
    public Object clone()
    {
        return new ASequenceTriggers(
            (PTriggers) cloneNode(_triggers_),
            (TComma) cloneNode(_comma_),
            (PAtrigger) cloneNode(_atrigger_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASequenceTriggers(this);
    }

    public PTriggers getTriggers()
    {
        return _triggers_;
    }

    public void setTriggers(PTriggers node)
    {
        if(_triggers_ != null)
        {
            _triggers_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _triggers_ = node;
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PAtrigger getAtrigger()
    {
        return _atrigger_;
    }

    public void setAtrigger(PAtrigger node)
    {
        if(_atrigger_ != null)
        {
            _atrigger_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _atrigger_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_triggers_)
            + toString(_comma_)
            + toString(_atrigger_);
    }

    void removeChild(Node child)
    {
        if(_triggers_ == child)
        {
            _triggers_ = null;
            return;
        }

        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_atrigger_ == child)
        {
            _atrigger_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_triggers_ == oldChild)
        {
            setTriggers((PTriggers) newChild);
            return;
        }

        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_atrigger_ == oldChild)
        {
            setAtrigger((PAtrigger) newChild);
            return;
        }

    }
}
