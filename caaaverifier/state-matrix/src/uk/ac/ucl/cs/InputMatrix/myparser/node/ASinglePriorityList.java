/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ASinglePriorityList extends PPriorityList
{
    private PMyPriority _myPriority_;

    public ASinglePriorityList()
    {
    }

    public ASinglePriorityList(
        PMyPriority _myPriority_)
    {
        setMyPriority(_myPriority_);

    }
    public Object clone()
    {
        return new ASinglePriorityList(
            (PMyPriority) cloneNode(_myPriority_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASinglePriorityList(this);
    }

    public PMyPriority getMyPriority()
    {
        return _myPriority_;
    }

    public void setMyPriority(PMyPriority node)
    {
        if(_myPriority_ != null)
        {
            _myPriority_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _myPriority_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_myPriority_);
    }

    void removeChild(Node child)
    {
        if(_myPriority_ == child)
        {
            _myPriority_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_myPriority_ == oldChild)
        {
            setMyPriority((PMyPriority) newChild);
            return;
        }

    }
}
