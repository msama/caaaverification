/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ALogicLeRelationExp extends PRelationExp
{
    private PMyUnaryExp _le1_;
    private TLLe _lLe_;
    private PMyUnaryExp _le2_;

    public ALogicLeRelationExp()
    {
    }

    public ALogicLeRelationExp(
        PMyUnaryExp _le1_,
        TLLe _lLe_,
        PMyUnaryExp _le2_)
    {
        setLe1(_le1_);

        setLLe(_lLe_);

        setLe2(_le2_);

    }
    public Object clone()
    {
        return new ALogicLeRelationExp(
            (PMyUnaryExp) cloneNode(_le1_),
            (TLLe) cloneNode(_lLe_),
            (PMyUnaryExp) cloneNode(_le2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogicLeRelationExp(this);
    }

    public PMyUnaryExp getLe1()
    {
        return _le1_;
    }

    public void setLe1(PMyUnaryExp node)
    {
        if(_le1_ != null)
        {
            _le1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _le1_ = node;
    }

    public TLLe getLLe()
    {
        return _lLe_;
    }

    public void setLLe(TLLe node)
    {
        if(_lLe_ != null)
        {
            _lLe_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lLe_ = node;
    }

    public PMyUnaryExp getLe2()
    {
        return _le2_;
    }

    public void setLe2(PMyUnaryExp node)
    {
        if(_le2_ != null)
        {
            _le2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _le2_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_le1_)
            + toString(_lLe_)
            + toString(_le2_);
    }

    void removeChild(Node child)
    {
        if(_le1_ == child)
        {
            _le1_ = null;
            return;
        }

        if(_lLe_ == child)
        {
            _lLe_ = null;
            return;
        }

        if(_le2_ == child)
        {
            _le2_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_le1_ == oldChild)
        {
            setLe1((PMyUnaryExp) newChild);
            return;
        }

        if(_lLe_ == oldChild)
        {
            setLLe((TLLe) newChild);
            return;
        }

        if(_le2_ == oldChild)
        {
            setLe2((PMyUnaryExp) newChild);
            return;
        }

    }
}
