/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class AFsmName extends PFsmName
{
    private TName _name_;
    private TEqual _equal_;
    private TString _string_;

    public AFsmName()
    {
    }

    public AFsmName(
        TName _name_,
        TEqual _equal_,
        TString _string_)
    {
        setName(_name_);

        setEqual(_equal_);

        setString(_string_);

    }
    public Object clone()
    {
        return new AFsmName(
            (TName) cloneNode(_name_),
            (TEqual) cloneNode(_equal_),
            (TString) cloneNode(_string_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFsmName(this);
    }

    public TName getName()
    {
        return _name_;
    }

    public void setName(TName node)
    {
        if(_name_ != null)
        {
            _name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _name_ = node;
    }

    public TEqual getEqual()
    {
        return _equal_;
    }

    public void setEqual(TEqual node)
    {
        if(_equal_ != null)
        {
            _equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equal_ = node;
    }

    public TString getString()
    {
        return _string_;
    }

    public void setString(TString node)
    {
        if(_string_ != null)
        {
            _string_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _string_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_name_)
            + toString(_equal_)
            + toString(_string_);
    }

    void removeChild(Node child)
    {
        if(_name_ == child)
        {
            _name_ = null;
            return;
        }

        if(_equal_ == child)
        {
            _equal_ = null;
            return;
        }

        if(_string_ == child)
        {
            _string_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_name_ == oldChild)
        {
            setName((TName) newChild);
            return;
        }

        if(_equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(_string_ == oldChild)
        {
            setString((TString) newChild);
            return;
        }

    }
}
