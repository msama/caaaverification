/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class AFsmContextVariables extends PFsmContextVariables
{
    private TContextVariables _contextVariables_;
    private TEqual _equal_;
    private PVariableList _variableList_;

    public AFsmContextVariables()
    {
    }

    public AFsmContextVariables(
        TContextVariables _contextVariables_,
        TEqual _equal_,
        PVariableList _variableList_)
    {
        setContextVariables(_contextVariables_);

        setEqual(_equal_);

        setVariableList(_variableList_);

    }
    public Object clone()
    {
        return new AFsmContextVariables(
            (TContextVariables) cloneNode(_contextVariables_),
            (TEqual) cloneNode(_equal_),
            (PVariableList) cloneNode(_variableList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFsmContextVariables(this);
    }

    public TContextVariables getContextVariables()
    {
        return _contextVariables_;
    }

    public void setContextVariables(TContextVariables node)
    {
        if(_contextVariables_ != null)
        {
            _contextVariables_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _contextVariables_ = node;
    }

    public TEqual getEqual()
    {
        return _equal_;
    }

    public void setEqual(TEqual node)
    {
        if(_equal_ != null)
        {
            _equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equal_ = node;
    }

    public PVariableList getVariableList()
    {
        return _variableList_;
    }

    public void setVariableList(PVariableList node)
    {
        if(_variableList_ != null)
        {
            _variableList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _variableList_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_contextVariables_)
            + toString(_equal_)
            + toString(_variableList_);
    }

    void removeChild(Node child)
    {
        if(_contextVariables_ == child)
        {
            _contextVariables_ = null;
            return;
        }

        if(_equal_ == child)
        {
            _equal_ = null;
            return;
        }

        if(_variableList_ == child)
        {
            _variableList_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_contextVariables_ == oldChild)
        {
            setContextVariables((TContextVariables) newChild);
            return;
        }

        if(_equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(_variableList_ == oldChild)
        {
            setVariableList((PVariableList) newChild);
            return;
        }

    }
}
