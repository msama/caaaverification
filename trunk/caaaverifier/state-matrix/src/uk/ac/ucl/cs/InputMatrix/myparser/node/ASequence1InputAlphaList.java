/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ASequence1InputAlphaList extends PInputAlphaList
{
    private PInputAlphaList _inputAlphaList_;
    private TComma _comma_;
    private PMyInputAlpha _myInputAlpha_;

    public ASequence1InputAlphaList()
    {
    }

    public ASequence1InputAlphaList(
        PInputAlphaList _inputAlphaList_,
        TComma _comma_,
        PMyInputAlpha _myInputAlpha_)
    {
        setInputAlphaList(_inputAlphaList_);

        setComma(_comma_);

        setMyInputAlpha(_myInputAlpha_);

    }
    public Object clone()
    {
        return new ASequence1InputAlphaList(
            (PInputAlphaList) cloneNode(_inputAlphaList_),
            (TComma) cloneNode(_comma_),
            (PMyInputAlpha) cloneNode(_myInputAlpha_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASequence1InputAlphaList(this);
    }

    public PInputAlphaList getInputAlphaList()
    {
        return _inputAlphaList_;
    }

    public void setInputAlphaList(PInputAlphaList node)
    {
        if(_inputAlphaList_ != null)
        {
            _inputAlphaList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _inputAlphaList_ = node;
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PMyInputAlpha getMyInputAlpha()
    {
        return _myInputAlpha_;
    }

    public void setMyInputAlpha(PMyInputAlpha node)
    {
        if(_myInputAlpha_ != null)
        {
            _myInputAlpha_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _myInputAlpha_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_inputAlphaList_)
            + toString(_comma_)
            + toString(_myInputAlpha_);
    }

    void removeChild(Node child)
    {
        if(_inputAlphaList_ == child)
        {
            _inputAlphaList_ = null;
            return;
        }

        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_myInputAlpha_ == child)
        {
            _myInputAlpha_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_inputAlphaList_ == oldChild)
        {
            setInputAlphaList((PInputAlphaList) newChild);
            return;
        }

        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_myInputAlpha_ == oldChild)
        {
            setMyInputAlpha((PMyInputAlpha) newChild);
            return;
        }

    }
}
