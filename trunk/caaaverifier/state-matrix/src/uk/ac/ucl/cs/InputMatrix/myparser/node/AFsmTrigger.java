/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class AFsmTrigger extends PFsmTrigger
{
    private TTrigger _trigger_;
    private TEqual _equal_;
    private PTriggerList _triggerList_;

    public AFsmTrigger()
    {
    }

    public AFsmTrigger(
        TTrigger _trigger_,
        TEqual _equal_,
        PTriggerList _triggerList_)
    {
        setTrigger(_trigger_);

        setEqual(_equal_);

        setTriggerList(_triggerList_);

    }
    public Object clone()
    {
        return new AFsmTrigger(
            (TTrigger) cloneNode(_trigger_),
            (TEqual) cloneNode(_equal_),
            (PTriggerList) cloneNode(_triggerList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFsmTrigger(this);
    }

    public TTrigger getTrigger()
    {
        return _trigger_;
    }

    public void setTrigger(TTrigger node)
    {
        if(_trigger_ != null)
        {
            _trigger_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _trigger_ = node;
    }

    public TEqual getEqual()
    {
        return _equal_;
    }

    public void setEqual(TEqual node)
    {
        if(_equal_ != null)
        {
            _equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equal_ = node;
    }

    public PTriggerList getTriggerList()
    {
        return _triggerList_;
    }

    public void setTriggerList(PTriggerList node)
    {
        if(_triggerList_ != null)
        {
            _triggerList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _triggerList_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_trigger_)
            + toString(_equal_)
            + toString(_triggerList_);
    }

    void removeChild(Node child)
    {
        if(_trigger_ == child)
        {
            _trigger_ = null;
            return;
        }

        if(_equal_ == child)
        {
            _equal_ = null;
            return;
        }

        if(_triggerList_ == child)
        {
            _triggerList_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_trigger_ == oldChild)
        {
            setTrigger((TTrigger) newChild);
            return;
        }

        if(_equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(_triggerList_ == oldChild)
        {
            setTriggerList((PTriggerList) newChild);
            return;
        }

    }
}
