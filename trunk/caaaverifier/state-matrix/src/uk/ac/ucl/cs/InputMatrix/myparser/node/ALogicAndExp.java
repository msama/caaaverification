/* This file was generated by SableCC (http://www.sablecc.org/). */

package uk.ac.ucl.cs.InputMatrix.myparser.node;

import java.util.*;
import uk.ac.ucl.cs.InputMatrix.myparser.analysis.*;

public final class ALogicAndExp extends PLogicAndExp
{
    private PUnaryExp _unary1_;
    private TLAnd _lAnd_;
    private PUnaryExp _unary2_;

    public ALogicAndExp()
    {
    }

    public ALogicAndExp(
        PUnaryExp _unary1_,
        TLAnd _lAnd_,
        PUnaryExp _unary2_)
    {
        setUnary1(_unary1_);

        setLAnd(_lAnd_);

        setUnary2(_unary2_);

    }
    public Object clone()
    {
        return new ALogicAndExp(
            (PUnaryExp) cloneNode(_unary1_),
            (TLAnd) cloneNode(_lAnd_),
            (PUnaryExp) cloneNode(_unary2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogicAndExp(this);
    }

    public PUnaryExp getUnary1()
    {
        return _unary1_;
    }

    public void setUnary1(PUnaryExp node)
    {
        if(_unary1_ != null)
        {
            _unary1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _unary1_ = node;
    }

    public TLAnd getLAnd()
    {
        return _lAnd_;
    }

    public void setLAnd(TLAnd node)
    {
        if(_lAnd_ != null)
        {
            _lAnd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lAnd_ = node;
    }

    public PUnaryExp getUnary2()
    {
        return _unary2_;
    }

    public void setUnary2(PUnaryExp node)
    {
        if(_unary2_ != null)
        {
            _unary2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _unary2_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_unary1_)
            + toString(_lAnd_)
            + toString(_unary2_);
    }

    void removeChild(Node child)
    {
        if(_unary1_ == child)
        {
            _unary1_ = null;
            return;
        }

        if(_lAnd_ == child)
        {
            _lAnd_ = null;
            return;
        }

        if(_unary2_ == child)
        {
            _unary2_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_unary1_ == oldChild)
        {
            setUnary1((PUnaryExp) newChild);
            return;
        }

        if(_lAnd_ == oldChild)
        {
            setLAnd((TLAnd) newChild);
            return;
        }

        if(_unary2_ == oldChild)
        {
            setUnary2((PUnaryExp) newChild);
            return;
        }

    }
}
